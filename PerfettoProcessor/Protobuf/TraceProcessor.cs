// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/perfetto/trace_processor/trace_processor.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Perfetto.Protos {

  /// <summary>Holder for reflection information generated from protos/perfetto/trace_processor/trace_processor.proto</summary>
  public static partial class TraceProcessorReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/perfetto/trace_processor/trace_processor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TraceProcessorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVwcm90b3MvcGVyZmV0dG8vdHJhY2VfcHJvY2Vzc29yL3RyYWNlX3Byb2Nl",
            "c3Nvci5wcm90bxIPcGVyZmV0dG8ucHJvdG9zGidwcm90b3MvcGVyZmV0dG8v",
            "Y29tbW9uL2Rlc2NyaXB0b3IucHJvdG8iSgoXVHJhY2VQcm9jZXNzb3JScGNT",
            "dHJlYW0SLwoDbXNnGAEgAygLMiIucGVyZmV0dG8ucHJvdG9zLlRyYWNlUHJv",
            "Y2Vzc29yUnBjIosJChFUcmFjZVByb2Nlc3NvclJwYxILCgNzZXEYASABKAMS",
            "EwoLZmF0YWxfZXJyb3IYBSABKAkSSgoHcmVxdWVzdBgCIAEoDjI3LnBlcmZl",
            "dHRvLnByb3Rvcy5UcmFjZVByb2Nlc3NvclJwYy5UcmFjZVByb2Nlc3Nvck1l",
            "dGhvZEgAEksKCHJlc3BvbnNlGAMgASgOMjcucGVyZmV0dG8ucHJvdG9zLlRy",
            "YWNlUHJvY2Vzc29yUnBjLlRyYWNlUHJvY2Vzc29yTWV0aG9kSAASUgoPaW52",
            "YWxpZF9yZXF1ZXN0GAQgASgOMjcucGVyZmV0dG8ucHJvdG9zLlRyYWNlUHJv",
            "Y2Vzc29yUnBjLlRyYWNlUHJvY2Vzc29yTWV0aG9kSAASGwoRYXBwZW5kX3Ry",
            "YWNlX2RhdGEYZSABKAxIARIwCgpxdWVyeV9hcmdzGGcgASgLMhoucGVyZmV0",
            "dG8ucHJvdG9zLlF1ZXJ5QXJnc0gBEkEKE2NvbXB1dGVfbWV0cmljX2FyZ3MY",
            "aSABKAsyIi5wZXJmZXR0by5wcm90b3MuQ29tcHV0ZU1ldHJpY0FyZ3NIARJA",
            "Cg1hcHBlbmRfcmVzdWx0GMkBIAEoCzImLnBlcmZldHRvLnByb3Rvcy5BcHBl",
            "bmRUcmFjZURhdGFSZXN1bHRIARI1CgxxdWVyeV9yZXN1bHQYywEgASgLMhwu",
            "cGVyZmV0dG8ucHJvdG9zLlF1ZXJ5UmVzdWx0SAESPgoNbWV0cmljX3Jlc3Vs",
            "dBjNASABKAsyJC5wZXJmZXR0by5wcm90b3MuQ29tcHV0ZU1ldHJpY1Jlc3Vs",
            "dEgBEj0KEm1ldHJpY19kZXNjcmlwdG9ycxjOASABKAsyHi5wZXJmZXR0by5w",
            "cm90b3MuRGVzY3JpcHRvclNldEgBEkQKCW1ldGF0cmFjZRjRASABKAsyLi5w",
            "ZXJmZXR0by5wcm90b3MuRGlzYWJsZUFuZFJlYWRNZXRhdHJhY2VSZXN1bHRI",
            "ARIwCgZzdGF0dXMY0gEgASgLMh0ucGVyZmV0dG8ucHJvdG9zLlN0YXR1c1Jl",
            "c3VsdEgBIsYCChRUcmFjZVByb2Nlc3Nvck1ldGhvZBITCg9UUE1fVU5TUEVD",
            "SUZJRUQQABIZChVUUE1fQVBQRU5EX1RSQUNFX0RBVEEQARIbChdUUE1fRklO",
            "QUxJWkVfVFJBQ0VfREFUQRACEhcKE1RQTV9RVUVSWV9TVFJFQU1JTkcQAxIW",
            "ChJUUE1fQ09NUFVURV9NRVRSSUMQBRIeChpUUE1fR0VUX01FVFJJQ19ERVND",
            "UklQVE9SUxAGEh4KGlRQTV9SRVNUT1JFX0lOSVRJQUxfVEFCTEVTEAcSGAoU",
            "VFBNX0VOQUJMRV9NRVRBVFJBQ0UQCBIiCh5UUE1fRElTQUJMRV9BTkRfUkVB",
            "RF9NRVRBVFJBQ0UQCRISCg5UUE1fR0VUX1NUQVRVUxAKIgQIBBAEKhhUUE1f",
            "UVVFUllfUkFXX0RFUFJFQ0FURURCBgoEdHlwZUIGCgRhcmdzSgQIaBBpSgYI",
            "zAEQzQEiQgoVQXBwZW5kVHJhY2VEYXRhUmVzdWx0EhoKEnRvdGFsX2J5dGVz",
            "X3BhcnNlZBgBIAEoAxINCgVlcnJvchgCIAEoCSI2CglRdWVyeUFyZ3MSEQoJ",
            "c3FsX3F1ZXJ5GAEgASgJEhYKDnRpbWVfcXVldWVkX25zGAIgASgEIqoDCgtR",
            "dWVyeVJlc3VsdBIUCgxjb2x1bW5fbmFtZXMYASADKAkSDQoFZXJyb3IYAiAB",
            "KAkSNgoFYmF0Y2gYAyADKAsyJy5wZXJmZXR0by5wcm90b3MuUXVlcnlSZXN1",
            "bHQuQ2VsbHNCYXRjaBq9AgoKQ2VsbHNCYXRjaBJDCgVjZWxscxgBIAMoDjIw",
            "LnBlcmZldHRvLnByb3Rvcy5RdWVyeVJlc3VsdC5DZWxsc0JhdGNoLkNlbGxU",
            "eXBlQgIQARIYCgx2YXJpbnRfY2VsbHMYAiADKANCAhABEhkKDWZsb2F0NjRf",
            "Y2VsbHMYAyADKAFCAhABEhIKCmJsb2JfY2VsbHMYBCADKAwSFAoMc3RyaW5n",
            "X2NlbGxzGAUgASgJEhUKDWlzX2xhc3RfYmF0Y2gYBiABKAgibgoIQ2VsbFR5",
            "cGUSEAoMQ0VMTF9JTlZBTElEEAASDQoJQ0VMTF9OVUxMEAESDwoLQ0VMTF9W",
            "QVJJTlQQAhIQCgxDRUxMX0ZMT0FUNjQQAxIPCgtDRUxMX1NUUklORxAEEg0K",
            "CUNFTExfQkxPQhAFSgQIBxAIIgwKClN0YXR1c0FyZ3MiXgoMU3RhdHVzUmVz",
            "dWx0EhkKEWxvYWRlZF90cmFjZV9uYW1lGAEgASgJEh4KFmh1bWFuX3JlYWRh",
            "YmxlX3ZlcnNpb24YAiABKAkSEwoLYXBpX3ZlcnNpb24YAyABKAUingEKEUNv",
            "bXB1dGVNZXRyaWNBcmdzEhQKDG1ldHJpY19uYW1lcxgBIAMoCRI/CgZmb3Jt",
            "YXQYAiABKA4yLy5wZXJmZXR0by5wcm90b3MuQ29tcHV0ZU1ldHJpY0FyZ3Mu",
            "UmVzdWx0Rm9ybWF0IjIKDFJlc3VsdEZvcm1hdBITCg9CSU5BUllfUFJPVE9C",
            "VUYQABINCglURVhUUFJPVE8QASJhChNDb21wdXRlTWV0cmljUmVzdWx0EhEK",
            "B21ldHJpY3MYASABKAxIABIeChRtZXRyaWNzX2FzX3Byb3RvdGV4dBgDIAEo",
            "CUgAEg0KBWVycm9yGAIgASgJQggKBnJlc3VsdCIVChNFbmFibGVNZXRhdHJh",
            "Y2VBcmdzIhcKFUVuYWJsZU1ldGF0cmFjZVJlc3VsdCIdChtEaXNhYmxlQW5k",
            "UmVhZE1ldGF0cmFjZUFyZ3MiQQodRGlzYWJsZUFuZFJlYWRNZXRhdHJhY2VS",
            "ZXN1bHQSEQoJbWV0YXRyYWNlGAEgASgMEg0KBWVycm9yGAIgASgJIkYKDURl",
            "c2NyaXB0b3JTZXQSNQoLZGVzY3JpcHRvcnMYASADKAsyIC5wZXJmZXR0by5w",
            "cm90b3MuRGVzY3JpcHRvclByb3RvKkMKGFRyYWNlUHJvY2Vzc29yQXBpVmVy",
            "c2lvbhInCiNUUkFDRV9QUk9DRVNTT1JfQ1VSUkVOVF9BUElfVkVSU0lPThAC"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Perfetto.Protos.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Perfetto.Protos.TraceProcessorApiVersion), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.TraceProcessorRpcStream), global::Perfetto.Protos.TraceProcessorRpcStream.Parser, new[]{ "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.TraceProcessorRpc), global::Perfetto.Protos.TraceProcessorRpc.Parser, new[]{ "Seq", "FatalError", "Request", "Response", "InvalidRequest", "AppendTraceData", "QueryArgs", "ComputeMetricArgs", "AppendResult", "QueryResult", "MetricResult", "MetricDescriptors", "Metatrace", "Status" }, new[]{ "Type", "Args" }, new[]{ typeof(global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.AppendTraceDataResult), global::Perfetto.Protos.AppendTraceDataResult.Parser, new[]{ "TotalBytesParsed", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.QueryArgs), global::Perfetto.Protos.QueryArgs.Parser, new[]{ "SqlQuery", "TimeQueuedNs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.QueryResult), global::Perfetto.Protos.QueryResult.Parser, new[]{ "ColumnNames", "Error", "Batch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.QueryResult.Types.CellsBatch), global::Perfetto.Protos.QueryResult.Types.CellsBatch.Parser, new[]{ "Cells", "VarintCells", "Float64Cells", "BlobCells", "StringCells", "IsLastBatch" }, null, new[]{ typeof(global::Perfetto.Protos.QueryResult.Types.CellsBatch.Types.CellType) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.StatusArgs), global::Perfetto.Protos.StatusArgs.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.StatusResult), global::Perfetto.Protos.StatusResult.Parser, new[]{ "LoadedTraceName", "HumanReadableVersion", "ApiVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.ComputeMetricArgs), global::Perfetto.Protos.ComputeMetricArgs.Parser, new[]{ "MetricNames", "Format" }, null, new[]{ typeof(global::Perfetto.Protos.ComputeMetricArgs.Types.ResultFormat) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.ComputeMetricResult), global::Perfetto.Protos.ComputeMetricResult.Parser, new[]{ "Metrics", "MetricsAsPrototext", "Error" }, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.EnableMetatraceArgs), global::Perfetto.Protos.EnableMetatraceArgs.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.EnableMetatraceResult), global::Perfetto.Protos.EnableMetatraceResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.DisableAndReadMetatraceArgs), global::Perfetto.Protos.DisableAndReadMetatraceArgs.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.DisableAndReadMetatraceResult), global::Perfetto.Protos.DisableAndReadMetatraceResult.Parser, new[]{ "Metatrace", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Perfetto.Protos.DescriptorSet), global::Perfetto.Protos.DescriptorSet.Parser, new[]{ "Descriptors" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TraceProcessorApiVersion {
    /// <summary>
    /// This variable has been introduced in v15 and is used to deal with API
    /// mismatches between UI and trace_processor_shell --httpd. Increment this
    /// every time a new feature that the UI depends on is being introduced (e.g.
    /// new tables, new SQL operators, metrics that are required by the UI).
    /// See also TraceProcessorVersion (below).
    /// </summary>
    [pbr::OriginalName("TRACE_PROCESSOR_CURRENT_API_VERSION")] TraceProcessorCurrentApiVersion = 2,
  }

  #endregion

  #region Messages
  public sealed partial class TraceProcessorRpcStream : pb::IMessage<TraceProcessorRpcStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TraceProcessorRpcStream> _parser = new pb::MessageParser<TraceProcessorRpcStream>(() => new TraceProcessorRpcStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TraceProcessorRpcStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceProcessorRpcStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceProcessorRpcStream(TraceProcessorRpcStream other) : this() {
      msg_ = other.msg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceProcessorRpcStream Clone() {
      return new TraceProcessorRpcStream(this);
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Perfetto.Protos.TraceProcessorRpc> _repeated_msg_codec
        = pb::FieldCodec.ForMessage(10, global::Perfetto.Protos.TraceProcessorRpc.Parser);
    private readonly pbc::RepeatedField<global::Perfetto.Protos.TraceProcessorRpc> msg_ = new pbc::RepeatedField<global::Perfetto.Protos.TraceProcessorRpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Perfetto.Protos.TraceProcessorRpc> Msg {
      get { return msg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TraceProcessorRpcStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TraceProcessorRpcStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!msg_.Equals(other.msg_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= msg_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      msg_.WriteTo(output, _repeated_msg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      msg_.WriteTo(ref output, _repeated_msg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += msg_.CalculateSize(_repeated_msg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TraceProcessorRpcStream other) {
      if (other == null) {
        return;
      }
      msg_.Add(other.msg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            msg_.AddEntriesFrom(input, _repeated_msg_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            msg_.AddEntriesFrom(ref input, _repeated_msg_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TraceProcessorRpc : pb::IMessage<TraceProcessorRpc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TraceProcessorRpc> _parser = new pb::MessageParser<TraceProcessorRpc>(() => new TraceProcessorRpc());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TraceProcessorRpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceProcessorRpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceProcessorRpc(TraceProcessorRpc other) : this() {
      _hasBits0 = other._hasBits0;
      seq_ = other.seq_;
      fatalError_ = other.fatalError_;
      switch (other.TypeCase) {
        case TypeOneofCase.Request:
          Request = other.Request;
          break;
        case TypeOneofCase.Response:
          Response = other.Response;
          break;
        case TypeOneofCase.InvalidRequest:
          InvalidRequest = other.InvalidRequest;
          break;
      }

      switch (other.ArgsCase) {
        case ArgsOneofCase.AppendTraceData:
          AppendTraceData = other.AppendTraceData;
          break;
        case ArgsOneofCase.QueryArgs:
          QueryArgs = other.QueryArgs.Clone();
          break;
        case ArgsOneofCase.ComputeMetricArgs:
          ComputeMetricArgs = other.ComputeMetricArgs.Clone();
          break;
        case ArgsOneofCase.AppendResult:
          AppendResult = other.AppendResult.Clone();
          break;
        case ArgsOneofCase.QueryResult:
          QueryResult = other.QueryResult.Clone();
          break;
        case ArgsOneofCase.MetricResult:
          MetricResult = other.MetricResult.Clone();
          break;
        case ArgsOneofCase.MetricDescriptors:
          MetricDescriptors = other.MetricDescriptors.Clone();
          break;
        case ArgsOneofCase.Metatrace:
          Metatrace = other.Metatrace.Clone();
          break;
        case ArgsOneofCase.Status:
          Status = other.Status.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceProcessorRpc Clone() {
      return new TraceProcessorRpc(this);
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 1;
    private readonly static long SeqDefaultValue = 0L;

    private long seq_;
    /// <summary>
    /// A monotonic counter used only for debugging purposes, to detect if the
    /// underlying stream is missing or duping data. The counter starts at 0 on
    /// each side of the pipe and is incremented on each message.
    /// Do NOT expect that a response has the same |seq| of its corresponding
    /// request: some requests (e.g., a query returning many rows) can yield more
    /// than one response message, bringing the tx and rq seq our of sync.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seq {
      get { if ((_hasBits0 & 1) != 0) { return seq_; } else { return SeqDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seq_ = value;
      }
    }
    /// <summary>Gets whether the "seq" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSeq {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seq" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSeq() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fatal_error" field.</summary>
    public const int FatalErrorFieldNumber = 5;
    private readonly static string FatalErrorDefaultValue = "";

    private string fatalError_;
    /// <summary>
    /// This is returned when some unrecoverable error has been detected by the
    /// peer. The typical case is TraceProcessor detecting that the |seq| sequence
    /// is broken (e.g. when having two tabs open with the same --httpd instance).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FatalError {
      get { return fatalError_ ?? FatalErrorDefaultValue; }
      set {
        fatalError_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fatal_error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFatalError {
      get { return fatalError_ != null; }
    }
    /// <summary>Clears the value of the "fatal_error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFatalError() {
      fatalError_ = null;
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    /// <summary>
    /// Client -> TraceProcessor requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod Request {
      get { return HasRequest ? (global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod) type_ : global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod.TpmUnspecified; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.Request;
      }
    }
    /// <summary>Gets whether the "request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequest {
      get { return typeCase_ == TypeOneofCase.Request; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      if (HasRequest) {
        ClearType();
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 3;
    /// <summary>
    /// TraceProcessor -> Client responses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod Response {
      get { return HasResponse ? (global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod) type_ : global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod.TpmUnspecified; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.Response;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return typeCase_ == TypeOneofCase.Response; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "response" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      if (HasResponse) {
        ClearType();
      }
    }

    /// <summary>Field number for the "invalid_request" field.</summary>
    public const int InvalidRequestFieldNumber = 4;
    /// <summary>
    /// This is sent back instead of filling |response| when the client sends a
    /// |request| which is not known by the TraceProcessor service. This can
    /// happen when the client is newer than the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod InvalidRequest {
      get { return HasInvalidRequest ? (global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod) type_ : global::Perfetto.Protos.TraceProcessorRpc.Types.TraceProcessorMethod.TpmUnspecified; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.InvalidRequest;
      }
    }
    /// <summary>Gets whether the "invalid_request" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvalidRequest {
      get { return typeCase_ == TypeOneofCase.InvalidRequest; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "invalid_request" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvalidRequest() {
      if (HasInvalidRequest) {
        ClearType();
      }
    }

    /// <summary>Field number for the "append_trace_data" field.</summary>
    public const int AppendTraceDataFieldNumber = 101;
    /// <summary>
    /// For TPM_APPEND_TRACE_DATA.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AppendTraceData {
      get { return HasAppendTraceData ? (pb::ByteString) args_ : pb::ByteString.Empty; }
      set {
        args_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        argsCase_ = ArgsOneofCase.AppendTraceData;
      }
    }
    /// <summary>Gets whether the "append_trace_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAppendTraceData {
      get { return argsCase_ == ArgsOneofCase.AppendTraceData; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "append_trace_data" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAppendTraceData() {
      if (HasAppendTraceData) {
        ClearArgs();
      }
    }

    /// <summary>Field number for the "query_args" field.</summary>
    public const int QueryArgsFieldNumber = 103;
    /// <summary>
    /// For TPM_QUERY_STREAMING.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.QueryArgs QueryArgs {
      get { return argsCase_ == ArgsOneofCase.QueryArgs ? (global::Perfetto.Protos.QueryArgs) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.QueryArgs;
      }
    }

    /// <summary>Field number for the "compute_metric_args" field.</summary>
    public const int ComputeMetricArgsFieldNumber = 105;
    /// <summary>
    /// For TPM_COMPUTE_METRIC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.ComputeMetricArgs ComputeMetricArgs {
      get { return argsCase_ == ArgsOneofCase.ComputeMetricArgs ? (global::Perfetto.Protos.ComputeMetricArgs) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.ComputeMetricArgs;
      }
    }

    /// <summary>Field number for the "append_result" field.</summary>
    public const int AppendResultFieldNumber = 201;
    /// <summary>
    /// TraceProcessorMethod response args.
    /// For TPM_APPEND_TRACE_DATA.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.AppendTraceDataResult AppendResult {
      get { return argsCase_ == ArgsOneofCase.AppendResult ? (global::Perfetto.Protos.AppendTraceDataResult) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.AppendResult;
      }
    }

    /// <summary>Field number for the "query_result" field.</summary>
    public const int QueryResultFieldNumber = 203;
    /// <summary>
    /// For TPM_QUERY_STREAMING.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.QueryResult QueryResult {
      get { return argsCase_ == ArgsOneofCase.QueryResult ? (global::Perfetto.Protos.QueryResult) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.QueryResult;
      }
    }

    /// <summary>Field number for the "metric_result" field.</summary>
    public const int MetricResultFieldNumber = 205;
    /// <summary>
    /// For TPM_COMPUTE_METRIC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.ComputeMetricResult MetricResult {
      get { return argsCase_ == ArgsOneofCase.MetricResult ? (global::Perfetto.Protos.ComputeMetricResult) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.MetricResult;
      }
    }

    /// <summary>Field number for the "metric_descriptors" field.</summary>
    public const int MetricDescriptorsFieldNumber = 206;
    /// <summary>
    /// For TPM_GET_METRIC_DESCRIPTORS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.DescriptorSet MetricDescriptors {
      get { return argsCase_ == ArgsOneofCase.MetricDescriptors ? (global::Perfetto.Protos.DescriptorSet) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.MetricDescriptors;
      }
    }

    /// <summary>Field number for the "metatrace" field.</summary>
    public const int MetatraceFieldNumber = 209;
    /// <summary>
    /// For TPM_DISABLE_AND_READ_METATRACE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.DisableAndReadMetatraceResult Metatrace {
      get { return argsCase_ == ArgsOneofCase.Metatrace ? (global::Perfetto.Protos.DisableAndReadMetatraceResult) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.Metatrace;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 210;
    /// <summary>
    /// For TPM_GET_STATUS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.StatusResult Status {
      get { return argsCase_ == ArgsOneofCase.Status ? (global::Perfetto.Protos.StatusResult) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.Status;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Request = 2,
      Response = 3,
      InvalidRequest = 4,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    private object args_;
    /// <summary>Enum of possible cases for the "args" oneof.</summary>
    public enum ArgsOneofCase {
      None = 0,
      AppendTraceData = 101,
      QueryArgs = 103,
      ComputeMetricArgs = 105,
      AppendResult = 201,
      QueryResult = 203,
      MetricResult = 205,
      MetricDescriptors = 206,
      Metatrace = 209,
      Status = 210,
    }
    private ArgsOneofCase argsCase_ = ArgsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArgsOneofCase ArgsCase {
      get { return argsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearArgs() {
      argsCase_ = ArgsOneofCase.None;
      args_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TraceProcessorRpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TraceProcessorRpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seq != other.Seq) return false;
      if (FatalError != other.FatalError) return false;
      if (Request != other.Request) return false;
      if (Response != other.Response) return false;
      if (InvalidRequest != other.InvalidRequest) return false;
      if (AppendTraceData != other.AppendTraceData) return false;
      if (!object.Equals(QueryArgs, other.QueryArgs)) return false;
      if (!object.Equals(ComputeMetricArgs, other.ComputeMetricArgs)) return false;
      if (!object.Equals(AppendResult, other.AppendResult)) return false;
      if (!object.Equals(QueryResult, other.QueryResult)) return false;
      if (!object.Equals(MetricResult, other.MetricResult)) return false;
      if (!object.Equals(MetricDescriptors, other.MetricDescriptors)) return false;
      if (!object.Equals(Metatrace, other.Metatrace)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (TypeCase != other.TypeCase) return false;
      if (ArgsCase != other.ArgsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeq) hash ^= Seq.GetHashCode();
      if (HasFatalError) hash ^= FatalError.GetHashCode();
      if (HasRequest) hash ^= Request.GetHashCode();
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasInvalidRequest) hash ^= InvalidRequest.GetHashCode();
      if (HasAppendTraceData) hash ^= AppendTraceData.GetHashCode();
      if (argsCase_ == ArgsOneofCase.QueryArgs) hash ^= QueryArgs.GetHashCode();
      if (argsCase_ == ArgsOneofCase.ComputeMetricArgs) hash ^= ComputeMetricArgs.GetHashCode();
      if (argsCase_ == ArgsOneofCase.AppendResult) hash ^= AppendResult.GetHashCode();
      if (argsCase_ == ArgsOneofCase.QueryResult) hash ^= QueryResult.GetHashCode();
      if (argsCase_ == ArgsOneofCase.MetricResult) hash ^= MetricResult.GetHashCode();
      if (argsCase_ == ArgsOneofCase.MetricDescriptors) hash ^= MetricDescriptors.GetHashCode();
      if (argsCase_ == ArgsOneofCase.Metatrace) hash ^= Metatrace.GetHashCode();
      if (argsCase_ == ArgsOneofCase.Status) hash ^= Status.GetHashCode();
      hash ^= (int) typeCase_;
      hash ^= (int) argsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeq) {
        output.WriteRawTag(8);
        output.WriteInt64(Seq);
      }
      if (HasRequest) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Request);
      }
      if (HasResponse) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Response);
      }
      if (HasInvalidRequest) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InvalidRequest);
      }
      if (HasFatalError) {
        output.WriteRawTag(42);
        output.WriteString(FatalError);
      }
      if (HasAppendTraceData) {
        output.WriteRawTag(170, 6);
        output.WriteBytes(AppendTraceData);
      }
      if (argsCase_ == ArgsOneofCase.QueryArgs) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(QueryArgs);
      }
      if (argsCase_ == ArgsOneofCase.ComputeMetricArgs) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(ComputeMetricArgs);
      }
      if (argsCase_ == ArgsOneofCase.AppendResult) {
        output.WriteRawTag(202, 12);
        output.WriteMessage(AppendResult);
      }
      if (argsCase_ == ArgsOneofCase.QueryResult) {
        output.WriteRawTag(218, 12);
        output.WriteMessage(QueryResult);
      }
      if (argsCase_ == ArgsOneofCase.MetricResult) {
        output.WriteRawTag(234, 12);
        output.WriteMessage(MetricResult);
      }
      if (argsCase_ == ArgsOneofCase.MetricDescriptors) {
        output.WriteRawTag(242, 12);
        output.WriteMessage(MetricDescriptors);
      }
      if (argsCase_ == ArgsOneofCase.Metatrace) {
        output.WriteRawTag(138, 13);
        output.WriteMessage(Metatrace);
      }
      if (argsCase_ == ArgsOneofCase.Status) {
        output.WriteRawTag(146, 13);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeq) {
        output.WriteRawTag(8);
        output.WriteInt64(Seq);
      }
      if (HasRequest) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Request);
      }
      if (HasResponse) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Response);
      }
      if (HasInvalidRequest) {
        output.WriteRawTag(32);
        output.WriteEnum((int) InvalidRequest);
      }
      if (HasFatalError) {
        output.WriteRawTag(42);
        output.WriteString(FatalError);
      }
      if (HasAppendTraceData) {
        output.WriteRawTag(170, 6);
        output.WriteBytes(AppendTraceData);
      }
      if (argsCase_ == ArgsOneofCase.QueryArgs) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(QueryArgs);
      }
      if (argsCase_ == ArgsOneofCase.ComputeMetricArgs) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(ComputeMetricArgs);
      }
      if (argsCase_ == ArgsOneofCase.AppendResult) {
        output.WriteRawTag(202, 12);
        output.WriteMessage(AppendResult);
      }
      if (argsCase_ == ArgsOneofCase.QueryResult) {
        output.WriteRawTag(218, 12);
        output.WriteMessage(QueryResult);
      }
      if (argsCase_ == ArgsOneofCase.MetricResult) {
        output.WriteRawTag(234, 12);
        output.WriteMessage(MetricResult);
      }
      if (argsCase_ == ArgsOneofCase.MetricDescriptors) {
        output.WriteRawTag(242, 12);
        output.WriteMessage(MetricDescriptors);
      }
      if (argsCase_ == ArgsOneofCase.Metatrace) {
        output.WriteRawTag(138, 13);
        output.WriteMessage(Metatrace);
      }
      if (argsCase_ == ArgsOneofCase.Status) {
        output.WriteRawTag(146, 13);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSeq) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seq);
      }
      if (HasFatalError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FatalError);
      }
      if (HasRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Request);
      }
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (HasInvalidRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvalidRequest);
      }
      if (HasAppendTraceData) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(AppendTraceData);
      }
      if (argsCase_ == ArgsOneofCase.QueryArgs) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QueryArgs);
      }
      if (argsCase_ == ArgsOneofCase.ComputeMetricArgs) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ComputeMetricArgs);
      }
      if (argsCase_ == ArgsOneofCase.AppendResult) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AppendResult);
      }
      if (argsCase_ == ArgsOneofCase.QueryResult) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QueryResult);
      }
      if (argsCase_ == ArgsOneofCase.MetricResult) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MetricResult);
      }
      if (argsCase_ == ArgsOneofCase.MetricDescriptors) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MetricDescriptors);
      }
      if (argsCase_ == ArgsOneofCase.Metatrace) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Metatrace);
      }
      if (argsCase_ == ArgsOneofCase.Status) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TraceProcessorRpc other) {
      if (other == null) {
        return;
      }
      if (other.HasSeq) {
        Seq = other.Seq;
      }
      if (other.HasFatalError) {
        FatalError = other.FatalError;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Request:
          Request = other.Request;
          break;
        case TypeOneofCase.Response:
          Response = other.Response;
          break;
        case TypeOneofCase.InvalidRequest:
          InvalidRequest = other.InvalidRequest;
          break;
      }

      switch (other.ArgsCase) {
        case ArgsOneofCase.AppendTraceData:
          AppendTraceData = other.AppendTraceData;
          break;
        case ArgsOneofCase.QueryArgs:
          if (QueryArgs == null) {
            QueryArgs = new global::Perfetto.Protos.QueryArgs();
          }
          QueryArgs.MergeFrom(other.QueryArgs);
          break;
        case ArgsOneofCase.ComputeMetricArgs:
          if (ComputeMetricArgs == null) {
            ComputeMetricArgs = new global::Perfetto.Protos.ComputeMetricArgs();
          }
          ComputeMetricArgs.MergeFrom(other.ComputeMetricArgs);
          break;
        case ArgsOneofCase.AppendResult:
          if (AppendResult == null) {
            AppendResult = new global::Perfetto.Protos.AppendTraceDataResult();
          }
          AppendResult.MergeFrom(other.AppendResult);
          break;
        case ArgsOneofCase.QueryResult:
          if (QueryResult == null) {
            QueryResult = new global::Perfetto.Protos.QueryResult();
          }
          QueryResult.MergeFrom(other.QueryResult);
          break;
        case ArgsOneofCase.MetricResult:
          if (MetricResult == null) {
            MetricResult = new global::Perfetto.Protos.ComputeMetricResult();
          }
          MetricResult.MergeFrom(other.MetricResult);
          break;
        case ArgsOneofCase.MetricDescriptors:
          if (MetricDescriptors == null) {
            MetricDescriptors = new global::Perfetto.Protos.DescriptorSet();
          }
          MetricDescriptors.MergeFrom(other.MetricDescriptors);
          break;
        case ArgsOneofCase.Metatrace:
          if (Metatrace == null) {
            Metatrace = new global::Perfetto.Protos.DisableAndReadMetatraceResult();
          }
          Metatrace.MergeFrom(other.Metatrace);
          break;
        case ArgsOneofCase.Status:
          if (Status == null) {
            Status = new global::Perfetto.Protos.StatusResult();
          }
          Status.MergeFrom(other.Status);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seq = input.ReadInt64();
            break;
          }
          case 16: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.Request;
            break;
          }
          case 24: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.Response;
            break;
          }
          case 32: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.InvalidRequest;
            break;
          }
          case 42: {
            FatalError = input.ReadString();
            break;
          }
          case 810: {
            AppendTraceData = input.ReadBytes();
            break;
          }
          case 826: {
            global::Perfetto.Protos.QueryArgs subBuilder = new global::Perfetto.Protos.QueryArgs();
            if (argsCase_ == ArgsOneofCase.QueryArgs) {
              subBuilder.MergeFrom(QueryArgs);
            }
            input.ReadMessage(subBuilder);
            QueryArgs = subBuilder;
            break;
          }
          case 842: {
            global::Perfetto.Protos.ComputeMetricArgs subBuilder = new global::Perfetto.Protos.ComputeMetricArgs();
            if (argsCase_ == ArgsOneofCase.ComputeMetricArgs) {
              subBuilder.MergeFrom(ComputeMetricArgs);
            }
            input.ReadMessage(subBuilder);
            ComputeMetricArgs = subBuilder;
            break;
          }
          case 1610: {
            global::Perfetto.Protos.AppendTraceDataResult subBuilder = new global::Perfetto.Protos.AppendTraceDataResult();
            if (argsCase_ == ArgsOneofCase.AppendResult) {
              subBuilder.MergeFrom(AppendResult);
            }
            input.ReadMessage(subBuilder);
            AppendResult = subBuilder;
            break;
          }
          case 1626: {
            global::Perfetto.Protos.QueryResult subBuilder = new global::Perfetto.Protos.QueryResult();
            if (argsCase_ == ArgsOneofCase.QueryResult) {
              subBuilder.MergeFrom(QueryResult);
            }
            input.ReadMessage(subBuilder);
            QueryResult = subBuilder;
            break;
          }
          case 1642: {
            global::Perfetto.Protos.ComputeMetricResult subBuilder = new global::Perfetto.Protos.ComputeMetricResult();
            if (argsCase_ == ArgsOneofCase.MetricResult) {
              subBuilder.MergeFrom(MetricResult);
            }
            input.ReadMessage(subBuilder);
            MetricResult = subBuilder;
            break;
          }
          case 1650: {
            global::Perfetto.Protos.DescriptorSet subBuilder = new global::Perfetto.Protos.DescriptorSet();
            if (argsCase_ == ArgsOneofCase.MetricDescriptors) {
              subBuilder.MergeFrom(MetricDescriptors);
            }
            input.ReadMessage(subBuilder);
            MetricDescriptors = subBuilder;
            break;
          }
          case 1674: {
            global::Perfetto.Protos.DisableAndReadMetatraceResult subBuilder = new global::Perfetto.Protos.DisableAndReadMetatraceResult();
            if (argsCase_ == ArgsOneofCase.Metatrace) {
              subBuilder.MergeFrom(Metatrace);
            }
            input.ReadMessage(subBuilder);
            Metatrace = subBuilder;
            break;
          }
          case 1682: {
            global::Perfetto.Protos.StatusResult subBuilder = new global::Perfetto.Protos.StatusResult();
            if (argsCase_ == ArgsOneofCase.Status) {
              subBuilder.MergeFrom(Status);
            }
            input.ReadMessage(subBuilder);
            Status = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seq = input.ReadInt64();
            break;
          }
          case 16: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.Request;
            break;
          }
          case 24: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.Response;
            break;
          }
          case 32: {
            type_ = input.ReadEnum();
            typeCase_ = TypeOneofCase.InvalidRequest;
            break;
          }
          case 42: {
            FatalError = input.ReadString();
            break;
          }
          case 810: {
            AppendTraceData = input.ReadBytes();
            break;
          }
          case 826: {
            global::Perfetto.Protos.QueryArgs subBuilder = new global::Perfetto.Protos.QueryArgs();
            if (argsCase_ == ArgsOneofCase.QueryArgs) {
              subBuilder.MergeFrom(QueryArgs);
            }
            input.ReadMessage(subBuilder);
            QueryArgs = subBuilder;
            break;
          }
          case 842: {
            global::Perfetto.Protos.ComputeMetricArgs subBuilder = new global::Perfetto.Protos.ComputeMetricArgs();
            if (argsCase_ == ArgsOneofCase.ComputeMetricArgs) {
              subBuilder.MergeFrom(ComputeMetricArgs);
            }
            input.ReadMessage(subBuilder);
            ComputeMetricArgs = subBuilder;
            break;
          }
          case 1610: {
            global::Perfetto.Protos.AppendTraceDataResult subBuilder = new global::Perfetto.Protos.AppendTraceDataResult();
            if (argsCase_ == ArgsOneofCase.AppendResult) {
              subBuilder.MergeFrom(AppendResult);
            }
            input.ReadMessage(subBuilder);
            AppendResult = subBuilder;
            break;
          }
          case 1626: {
            global::Perfetto.Protos.QueryResult subBuilder = new global::Perfetto.Protos.QueryResult();
            if (argsCase_ == ArgsOneofCase.QueryResult) {
              subBuilder.MergeFrom(QueryResult);
            }
            input.ReadMessage(subBuilder);
            QueryResult = subBuilder;
            break;
          }
          case 1642: {
            global::Perfetto.Protos.ComputeMetricResult subBuilder = new global::Perfetto.Protos.ComputeMetricResult();
            if (argsCase_ == ArgsOneofCase.MetricResult) {
              subBuilder.MergeFrom(MetricResult);
            }
            input.ReadMessage(subBuilder);
            MetricResult = subBuilder;
            break;
          }
          case 1650: {
            global::Perfetto.Protos.DescriptorSet subBuilder = new global::Perfetto.Protos.DescriptorSet();
            if (argsCase_ == ArgsOneofCase.MetricDescriptors) {
              subBuilder.MergeFrom(MetricDescriptors);
            }
            input.ReadMessage(subBuilder);
            MetricDescriptors = subBuilder;
            break;
          }
          case 1674: {
            global::Perfetto.Protos.DisableAndReadMetatraceResult subBuilder = new global::Perfetto.Protos.DisableAndReadMetatraceResult();
            if (argsCase_ == ArgsOneofCase.Metatrace) {
              subBuilder.MergeFrom(Metatrace);
            }
            input.ReadMessage(subBuilder);
            Metatrace = subBuilder;
            break;
          }
          case 1682: {
            global::Perfetto.Protos.StatusResult subBuilder = new global::Perfetto.Protos.StatusResult();
            if (argsCase_ == ArgsOneofCase.Status) {
              subBuilder.MergeFrom(Status);
            }
            input.ReadMessage(subBuilder);
            Status = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TraceProcessorRpc message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum TraceProcessorMethod {
        [pbr::OriginalName("TPM_UNSPECIFIED")] TpmUnspecified = 0,
        [pbr::OriginalName("TPM_APPEND_TRACE_DATA")] TpmAppendTraceData = 1,
        [pbr::OriginalName("TPM_FINALIZE_TRACE_DATA")] TpmFinalizeTraceData = 2,
        [pbr::OriginalName("TPM_QUERY_STREAMING")] TpmQueryStreaming = 3,
        [pbr::OriginalName("TPM_COMPUTE_METRIC")] TpmComputeMetric = 5,
        [pbr::OriginalName("TPM_GET_METRIC_DESCRIPTORS")] TpmGetMetricDescriptors = 6,
        [pbr::OriginalName("TPM_RESTORE_INITIAL_TABLES")] TpmRestoreInitialTables = 7,
        [pbr::OriginalName("TPM_ENABLE_METATRACE")] TpmEnableMetatrace = 8,
        [pbr::OriginalName("TPM_DISABLE_AND_READ_METATRACE")] TpmDisableAndReadMetatrace = 9,
        [pbr::OriginalName("TPM_GET_STATUS")] TpmGetStatus = 10,
      }

    }
    #endregion

  }

  public sealed partial class AppendTraceDataResult : pb::IMessage<AppendTraceDataResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppendTraceDataResult> _parser = new pb::MessageParser<AppendTraceDataResult>(() => new AppendTraceDataResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppendTraceDataResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendTraceDataResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendTraceDataResult(AppendTraceDataResult other) : this() {
      _hasBits0 = other._hasBits0;
      totalBytesParsed_ = other.totalBytesParsed_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendTraceDataResult Clone() {
      return new AppendTraceDataResult(this);
    }

    /// <summary>Field number for the "total_bytes_parsed" field.</summary>
    public const int TotalBytesParsedFieldNumber = 1;
    private readonly static long TotalBytesParsedDefaultValue = 0L;

    private long totalBytesParsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBytesParsed {
      get { if ((_hasBits0 & 1) != 0) { return totalBytesParsed_; } else { return TotalBytesParsedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totalBytesParsed_ = value;
      }
    }
    /// <summary>Gets whether the "total_bytes_parsed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalBytesParsed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total_bytes_parsed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalBytesParsed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private readonly static string ErrorDefaultValue = "";

    private string error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_ ?? ErrorDefaultValue; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasError {
      get { return error_ != null; }
    }
    /// <summary>Clears the value of the "error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearError() {
      error_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppendTraceDataResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppendTraceDataResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalBytesParsed != other.TotalBytesParsed) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTotalBytesParsed) hash ^= TotalBytesParsed.GetHashCode();
      if (HasError) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTotalBytesParsed) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalBytesParsed);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTotalBytesParsed) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalBytesParsed);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTotalBytesParsed) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBytesParsed);
      }
      if (HasError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppendTraceDataResult other) {
      if (other == null) {
        return;
      }
      if (other.HasTotalBytesParsed) {
        TotalBytesParsed = other.TotalBytesParsed;
      }
      if (other.HasError) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalBytesParsed = input.ReadInt64();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalBytesParsed = input.ReadInt64();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QueryArgs : pb::IMessage<QueryArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryArgs> _parser = new pb::MessageParser<QueryArgs>(() => new QueryArgs());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryArgs(QueryArgs other) : this() {
      _hasBits0 = other._hasBits0;
      sqlQuery_ = other.sqlQuery_;
      timeQueuedNs_ = other.timeQueuedNs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryArgs Clone() {
      return new QueryArgs(this);
    }

    /// <summary>Field number for the "sql_query" field.</summary>
    public const int SqlQueryFieldNumber = 1;
    private readonly static string SqlQueryDefaultValue = "";

    private string sqlQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SqlQuery {
      get { return sqlQuery_ ?? SqlQueryDefaultValue; }
      set {
        sqlQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sql_query" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSqlQuery {
      get { return sqlQuery_ != null; }
    }
    /// <summary>Clears the value of the "sql_query" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSqlQuery() {
      sqlQuery_ = null;
    }

    /// <summary>Field number for the "time_queued_ns" field.</summary>
    public const int TimeQueuedNsFieldNumber = 2;
    private readonly static ulong TimeQueuedNsDefaultValue = 0UL;

    private ulong timeQueuedNs_;
    /// <summary>
    /// Wall time when the query was queued. Used only for query stats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeQueuedNs {
      get { if ((_hasBits0 & 1) != 0) { return timeQueuedNs_; } else { return TimeQueuedNsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timeQueuedNs_ = value;
      }
    }
    /// <summary>Gets whether the "time_queued_ns" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeQueuedNs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "time_queued_ns" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeQueuedNs() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SqlQuery != other.SqlQuery) return false;
      if (TimeQueuedNs != other.TimeQueuedNs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSqlQuery) hash ^= SqlQuery.GetHashCode();
      if (HasTimeQueuedNs) hash ^= TimeQueuedNs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSqlQuery) {
        output.WriteRawTag(10);
        output.WriteString(SqlQuery);
      }
      if (HasTimeQueuedNs) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimeQueuedNs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSqlQuery) {
        output.WriteRawTag(10);
        output.WriteString(SqlQuery);
      }
      if (HasTimeQueuedNs) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimeQueuedNs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSqlQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SqlQuery);
      }
      if (HasTimeQueuedNs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeQueuedNs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryArgs other) {
      if (other == null) {
        return;
      }
      if (other.HasSqlQuery) {
        SqlQuery = other.SqlQuery;
      }
      if (other.HasTimeQueuedNs) {
        TimeQueuedNs = other.TimeQueuedNs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SqlQuery = input.ReadString();
            break;
          }
          case 16: {
            TimeQueuedNs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SqlQuery = input.ReadString();
            break;
          }
          case 16: {
            TimeQueuedNs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Output for the /query endpoint.
  /// Returns a query result set, grouping cells into batches. Batching allows a
  /// more efficient encoding of results, at the same time allowing to return
  /// O(M) results in a pipelined fashion, without full-memory buffering.
  /// Batches are split when either a large number of cells (~thousands) is reached
  /// or the string/blob payload becomes too large (~hundreds of KB).
  /// Data is batched in cells, scanning results by row -> column. e.g. if a query
  /// returns 3 columns and 2 rows, the cells will be emitted in this order:
  /// R0C0, R0C1, R0C2, R1C0, R1C1, R1C2.
  /// </summary>
  public sealed partial class QueryResult : pb::IMessage<QueryResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryResult> _parser = new pb::MessageParser<QueryResult>(() => new QueryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult(QueryResult other) : this() {
      columnNames_ = other.columnNames_.Clone();
      error_ = other.error_;
      batch_ = other.batch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResult Clone() {
      return new QueryResult(this);
    }

    /// <summary>Field number for the "column_names" field.</summary>
    public const int ColumnNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_columnNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> columnNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This determines the number and names of columns.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnNames {
      get { return columnNames_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private readonly static string ErrorDefaultValue = "";

    private string error_;
    /// <summary>
    /// If non-emty the query returned an error. Note that some cells might still
    /// be present, if the error happened while iterating.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_ ?? ErrorDefaultValue; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasError {
      get { return error_ != null; }
    }
    /// <summary>Clears the value of the "error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearError() {
      error_ = null;
    }

    /// <summary>Field number for the "batch" field.</summary>
    public const int BatchFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Perfetto.Protos.QueryResult.Types.CellsBatch> _repeated_batch_codec
        = pb::FieldCodec.ForMessage(26, global::Perfetto.Protos.QueryResult.Types.CellsBatch.Parser);
    private readonly pbc::RepeatedField<global::Perfetto.Protos.QueryResult.Types.CellsBatch> batch_ = new pbc::RepeatedField<global::Perfetto.Protos.QueryResult.Types.CellsBatch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Perfetto.Protos.QueryResult.Types.CellsBatch> Batch {
      get { return batch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columnNames_.Equals(other.columnNames_)) return false;
      if (Error != other.Error) return false;
      if(!batch_.Equals(other.batch_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columnNames_.GetHashCode();
      if (HasError) hash ^= Error.GetHashCode();
      hash ^= batch_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columnNames_.WriteTo(output, _repeated_columnNames_codec);
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      batch_.WriteTo(output, _repeated_batch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columnNames_.WriteTo(ref output, _repeated_columnNames_codec);
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      batch_.WriteTo(ref output, _repeated_batch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += columnNames_.CalculateSize(_repeated_columnNames_codec);
      if (HasError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += batch_.CalculateSize(_repeated_batch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResult other) {
      if (other == null) {
        return;
      }
      columnNames_.Add(other.columnNames_);
      if (other.HasError) {
        Error = other.Error;
      }
      batch_.Add(other.batch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            columnNames_.AddEntriesFrom(input, _repeated_columnNames_codec);
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            batch_.AddEntriesFrom(input, _repeated_batch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columnNames_.AddEntriesFrom(ref input, _repeated_columnNames_codec);
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            batch_.AddEntriesFrom(ref input, _repeated_batch_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the QueryResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A batch contains an array of cell headers, stating the type of each cell.
      /// The payload of each cell is stored in the corresponding xxx_cells field
      /// below (unless the cell is NULL).
      /// So if |cells| contains: [VARINT, FLOAT64, VARINT, STRING], the results will
      /// be available as:
      /// [varint_cells[0], float64_cells[0], varint_cells[1], string_cells[0]].
      /// </summary>
      public sealed partial class CellsBatch : pb::IMessage<CellsBatch>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CellsBatch> _parser = new pb::MessageParser<CellsBatch>(() => new CellsBatch());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CellsBatch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Perfetto.Protos.QueryResult.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CellsBatch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CellsBatch(CellsBatch other) : this() {
          _hasBits0 = other._hasBits0;
          cells_ = other.cells_.Clone();
          varintCells_ = other.varintCells_.Clone();
          float64Cells_ = other.float64Cells_.Clone();
          blobCells_ = other.blobCells_.Clone();
          stringCells_ = other.stringCells_;
          isLastBatch_ = other.isLastBatch_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CellsBatch Clone() {
          return new CellsBatch(this);
        }

        /// <summary>Field number for the "cells" field.</summary>
        public const int CellsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Perfetto.Protos.QueryResult.Types.CellsBatch.Types.CellType> _repeated_cells_codec
            = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Perfetto.Protos.QueryResult.Types.CellsBatch.Types.CellType) x);
        private readonly pbc::RepeatedField<global::Perfetto.Protos.QueryResult.Types.CellsBatch.Types.CellType> cells_ = new pbc::RepeatedField<global::Perfetto.Protos.QueryResult.Types.CellsBatch.Types.CellType>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Perfetto.Protos.QueryResult.Types.CellsBatch.Types.CellType> Cells {
          get { return cells_; }
        }

        /// <summary>Field number for the "varint_cells" field.</summary>
        public const int VarintCellsFieldNumber = 2;
        private static readonly pb::FieldCodec<long> _repeated_varintCells_codec
            = pb::FieldCodec.ForInt64(18);
        private readonly pbc::RepeatedField<long> varintCells_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> VarintCells {
          get { return varintCells_; }
        }

        /// <summary>Field number for the "float64_cells" field.</summary>
        public const int Float64CellsFieldNumber = 3;
        private static readonly pb::FieldCodec<double> _repeated_float64Cells_codec
            = pb::FieldCodec.ForDouble(26);
        private readonly pbc::RepeatedField<double> float64Cells_ = new pbc::RepeatedField<double>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<double> Float64Cells {
          get { return float64Cells_; }
        }

        /// <summary>Field number for the "blob_cells" field.</summary>
        public const int BlobCellsFieldNumber = 4;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_blobCells_codec
            = pb::FieldCodec.ForBytes(34);
        private readonly pbc::RepeatedField<pb::ByteString> blobCells_ = new pbc::RepeatedField<pb::ByteString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<pb::ByteString> BlobCells {
          get { return blobCells_; }
        }

        /// <summary>Field number for the "string_cells" field.</summary>
        public const int StringCellsFieldNumber = 5;
        private readonly static string StringCellsDefaultValue = "";

        private string stringCells_;
        /// <summary>
        /// The string cells are concatenated in a single field. Each cell is
        /// NUL-terminated. This is because JS incurs into a non-negligible overhead
        /// when decoding strings and one decode + split('\0') is measurably faster
        /// than decoding N strings. See goto.google.com/postmessage-benchmark .
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StringCells {
          get { return stringCells_ ?? StringCellsDefaultValue; }
          set {
            stringCells_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "string_cells" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasStringCells {
          get { return stringCells_ != null; }
        }
        /// <summary>Clears the value of the "string_cells" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearStringCells() {
          stringCells_ = null;
        }

        /// <summary>Field number for the "is_last_batch" field.</summary>
        public const int IsLastBatchFieldNumber = 6;
        private readonly static bool IsLastBatchDefaultValue = false;

        private bool isLastBatch_;
        /// <summary>
        /// If true this is the last batch for the query result.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsLastBatch {
          get { if ((_hasBits0 & 1) != 0) { return isLastBatch_; } else { return IsLastBatchDefaultValue; } }
          set {
            _hasBits0 |= 1;
            isLastBatch_ = value;
          }
        }
        /// <summary>Gets whether the "is_last_batch" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasIsLastBatch {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "is_last_batch" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIsLastBatch() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CellsBatch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CellsBatch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!cells_.Equals(other.cells_)) return false;
          if(!varintCells_.Equals(other.varintCells_)) return false;
          if(!float64Cells_.Equals(other.float64Cells_)) return false;
          if(!blobCells_.Equals(other.blobCells_)) return false;
          if (StringCells != other.StringCells) return false;
          if (IsLastBatch != other.IsLastBatch) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= cells_.GetHashCode();
          hash ^= varintCells_.GetHashCode();
          hash ^= float64Cells_.GetHashCode();
          hash ^= blobCells_.GetHashCode();
          if (HasStringCells) hash ^= StringCells.GetHashCode();
          if (HasIsLastBatch) hash ^= IsLastBatch.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          cells_.WriteTo(output, _repeated_cells_codec);
          varintCells_.WriteTo(output, _repeated_varintCells_codec);
          float64Cells_.WriteTo(output, _repeated_float64Cells_codec);
          blobCells_.WriteTo(output, _repeated_blobCells_codec);
          if (HasStringCells) {
            output.WriteRawTag(42);
            output.WriteString(StringCells);
          }
          if (HasIsLastBatch) {
            output.WriteRawTag(48);
            output.WriteBool(IsLastBatch);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          cells_.WriteTo(ref output, _repeated_cells_codec);
          varintCells_.WriteTo(ref output, _repeated_varintCells_codec);
          float64Cells_.WriteTo(ref output, _repeated_float64Cells_codec);
          blobCells_.WriteTo(ref output, _repeated_blobCells_codec);
          if (HasStringCells) {
            output.WriteRawTag(42);
            output.WriteString(StringCells);
          }
          if (HasIsLastBatch) {
            output.WriteRawTag(48);
            output.WriteBool(IsLastBatch);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += cells_.CalculateSize(_repeated_cells_codec);
          size += varintCells_.CalculateSize(_repeated_varintCells_codec);
          size += float64Cells_.CalculateSize(_repeated_float64Cells_codec);
          size += blobCells_.CalculateSize(_repeated_blobCells_codec);
          if (HasStringCells) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringCells);
          }
          if (HasIsLastBatch) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CellsBatch other) {
          if (other == null) {
            return;
          }
          cells_.Add(other.cells_);
          varintCells_.Add(other.varintCells_);
          float64Cells_.Add(other.float64Cells_);
          blobCells_.Add(other.blobCells_);
          if (other.HasStringCells) {
            StringCells = other.StringCells;
          }
          if (other.HasIsLastBatch) {
            IsLastBatch = other.IsLastBatch;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                cells_.AddEntriesFrom(input, _repeated_cells_codec);
                break;
              }
              case 18:
              case 16: {
                varintCells_.AddEntriesFrom(input, _repeated_varintCells_codec);
                break;
              }
              case 26:
              case 25: {
                float64Cells_.AddEntriesFrom(input, _repeated_float64Cells_codec);
                break;
              }
              case 34: {
                blobCells_.AddEntriesFrom(input, _repeated_blobCells_codec);
                break;
              }
              case 42: {
                StringCells = input.ReadString();
                break;
              }
              case 48: {
                IsLastBatch = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                cells_.AddEntriesFrom(ref input, _repeated_cells_codec);
                break;
              }
              case 18:
              case 16: {
                varintCells_.AddEntriesFrom(ref input, _repeated_varintCells_codec);
                break;
              }
              case 26:
              case 25: {
                float64Cells_.AddEntriesFrom(ref input, _repeated_float64Cells_codec);
                break;
              }
              case 34: {
                blobCells_.AddEntriesFrom(ref input, _repeated_blobCells_codec);
                break;
              }
              case 42: {
                StringCells = input.ReadString();
                break;
              }
              case 48: {
                IsLastBatch = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the CellsBatch message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum CellType {
            [pbr::OriginalName("CELL_INVALID")] CellInvalid = 0,
            [pbr::OriginalName("CELL_NULL")] CellNull = 1,
            [pbr::OriginalName("CELL_VARINT")] CellVarint = 2,
            [pbr::OriginalName("CELL_FLOAT64")] CellFloat64 = 3,
            [pbr::OriginalName("CELL_STRING")] CellString = 4,
            [pbr::OriginalName("CELL_BLOB")] CellBlob = 5,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Input for the /status endpoint.
  /// </summary>
  public sealed partial class StatusArgs : pb::IMessage<StatusArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatusArgs> _parser = new pb::MessageParser<StatusArgs>(() => new StatusArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusArgs(StatusArgs other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusArgs Clone() {
      return new StatusArgs(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusArgs other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Output for the /status endpoint.
  /// </summary>
  public sealed partial class StatusResult : pb::IMessage<StatusResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatusResult> _parser = new pb::MessageParser<StatusResult>(() => new StatusResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResult(StatusResult other) : this() {
      _hasBits0 = other._hasBits0;
      loadedTraceName_ = other.loadedTraceName_;
      humanReadableVersion_ = other.humanReadableVersion_;
      apiVersion_ = other.apiVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusResult Clone() {
      return new StatusResult(this);
    }

    /// <summary>Field number for the "loaded_trace_name" field.</summary>
    public const int LoadedTraceNameFieldNumber = 1;
    private readonly static string LoadedTraceNameDefaultValue = "";

    private string loadedTraceName_;
    /// <summary>
    /// If present and not empty, a trace is already loaded already. This happens
    /// when using the HTTP+RPC mode nad passing a trace file to the shell, via
    /// trace_processor_shell -D trace_file.pftrace .
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoadedTraceName {
      get { return loadedTraceName_ ?? LoadedTraceNameDefaultValue; }
      set {
        loadedTraceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "loaded_trace_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLoadedTraceName {
      get { return loadedTraceName_ != null; }
    }
    /// <summary>Clears the value of the "loaded_trace_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLoadedTraceName() {
      loadedTraceName_ = null;
    }

    /// <summary>Field number for the "human_readable_version" field.</summary>
    public const int HumanReadableVersionFieldNumber = 2;
    private readonly static string HumanReadableVersionDefaultValue = "";

    private string humanReadableVersion_;
    /// <summary>
    /// Typically something like "v11.0.123", but could be just "v11" or "unknown",
    /// for binaries built from Bazel or other build configurations. This is for
    /// human presentation only, don't attempt to parse and reason on it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HumanReadableVersion {
      get { return humanReadableVersion_ ?? HumanReadableVersionDefaultValue; }
      set {
        humanReadableVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "human_readable_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHumanReadableVersion {
      get { return humanReadableVersion_ != null; }
    }
    /// <summary>Clears the value of the "human_readable_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHumanReadableVersion() {
      humanReadableVersion_ = null;
    }

    /// <summary>Field number for the "api_version" field.</summary>
    public const int ApiVersionFieldNumber = 3;
    private readonly static int ApiVersionDefaultValue = 0;

    private int apiVersion_;
    /// <summary>
    /// The API version is incremented every time a change that the UI depends
    /// on is introduced (e.g. adding a new table that the UI queries).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApiVersion {
      get { if ((_hasBits0 & 1) != 0) { return apiVersion_; } else { return ApiVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        apiVersion_ = value;
      }
    }
    /// <summary>Gets whether the "api_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApiVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "api_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApiVersion() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoadedTraceName != other.LoadedTraceName) return false;
      if (HumanReadableVersion != other.HumanReadableVersion) return false;
      if (ApiVersion != other.ApiVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLoadedTraceName) hash ^= LoadedTraceName.GetHashCode();
      if (HasHumanReadableVersion) hash ^= HumanReadableVersion.GetHashCode();
      if (HasApiVersion) hash ^= ApiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLoadedTraceName) {
        output.WriteRawTag(10);
        output.WriteString(LoadedTraceName);
      }
      if (HasHumanReadableVersion) {
        output.WriteRawTag(18);
        output.WriteString(HumanReadableVersion);
      }
      if (HasApiVersion) {
        output.WriteRawTag(24);
        output.WriteInt32(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLoadedTraceName) {
        output.WriteRawTag(10);
        output.WriteString(LoadedTraceName);
      }
      if (HasHumanReadableVersion) {
        output.WriteRawTag(18);
        output.WriteString(HumanReadableVersion);
      }
      if (HasApiVersion) {
        output.WriteRawTag(24);
        output.WriteInt32(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLoadedTraceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoadedTraceName);
      }
      if (HasHumanReadableVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HumanReadableVersion);
      }
      if (HasApiVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusResult other) {
      if (other == null) {
        return;
      }
      if (other.HasLoadedTraceName) {
        LoadedTraceName = other.LoadedTraceName;
      }
      if (other.HasHumanReadableVersion) {
        HumanReadableVersion = other.HumanReadableVersion;
      }
      if (other.HasApiVersion) {
        ApiVersion = other.ApiVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LoadedTraceName = input.ReadString();
            break;
          }
          case 18: {
            HumanReadableVersion = input.ReadString();
            break;
          }
          case 24: {
            ApiVersion = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LoadedTraceName = input.ReadString();
            break;
          }
          case 18: {
            HumanReadableVersion = input.ReadString();
            break;
          }
          case 24: {
            ApiVersion = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Input for the /compute_metric endpoint.
  /// </summary>
  public sealed partial class ComputeMetricArgs : pb::IMessage<ComputeMetricArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeMetricArgs> _parser = new pb::MessageParser<ComputeMetricArgs>(() => new ComputeMetricArgs());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeMetricArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMetricArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMetricArgs(ComputeMetricArgs other) : this() {
      _hasBits0 = other._hasBits0;
      metricNames_ = other.metricNames_.Clone();
      format_ = other.format_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMetricArgs Clone() {
      return new ComputeMetricArgs(this);
    }

    /// <summary>Field number for the "metric_names" field.</summary>
    public const int MetricNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_metricNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> metricNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MetricNames {
      get { return metricNames_; }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 2;
    private readonly static global::Perfetto.Protos.ComputeMetricArgs.Types.ResultFormat FormatDefaultValue = global::Perfetto.Protos.ComputeMetricArgs.Types.ResultFormat.BinaryProtobuf;

    private global::Perfetto.Protos.ComputeMetricArgs.Types.ResultFormat format_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Perfetto.Protos.ComputeMetricArgs.Types.ResultFormat Format {
      get { if ((_hasBits0 & 1) != 0) { return format_; } else { return FormatDefaultValue; } }
      set {
        _hasBits0 |= 1;
        format_ = value;
      }
    }
    /// <summary>Gets whether the "format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormat {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormat() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeMetricArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeMetricArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!metricNames_.Equals(other.metricNames_)) return false;
      if (Format != other.Format) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= metricNames_.GetHashCode();
      if (HasFormat) hash ^= Format.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      metricNames_.WriteTo(output, _repeated_metricNames_codec);
      if (HasFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Format);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      metricNames_.WriteTo(ref output, _repeated_metricNames_codec);
      if (HasFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Format);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metricNames_.CalculateSize(_repeated_metricNames_codec);
      if (HasFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeMetricArgs other) {
      if (other == null) {
        return;
      }
      metricNames_.Add(other.metricNames_);
      if (other.HasFormat) {
        Format = other.Format;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metricNames_.AddEntriesFrom(input, _repeated_metricNames_codec);
            break;
          }
          case 16: {
            Format = (global::Perfetto.Protos.ComputeMetricArgs.Types.ResultFormat) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            metricNames_.AddEntriesFrom(ref input, _repeated_metricNames_codec);
            break;
          }
          case 16: {
            Format = (global::Perfetto.Protos.ComputeMetricArgs.Types.ResultFormat) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ComputeMetricArgs message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResultFormat {
        [pbr::OriginalName("BINARY_PROTOBUF")] BinaryProtobuf = 0,
        [pbr::OriginalName("TEXTPROTO")] Textproto = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Output for the /compute_metric endpoint.
  /// </summary>
  public sealed partial class ComputeMetricResult : pb::IMessage<ComputeMetricResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeMetricResult> _parser = new pb::MessageParser<ComputeMetricResult>(() => new ComputeMetricResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeMetricResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMetricResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMetricResult(ComputeMetricResult other) : this() {
      error_ = other.error_;
      switch (other.ResultCase) {
        case ResultOneofCase.Metrics:
          Metrics = other.Metrics;
          break;
        case ResultOneofCase.MetricsAsPrototext:
          MetricsAsPrototext = other.MetricsAsPrototext;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeMetricResult Clone() {
      return new ComputeMetricResult(this);
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 1;
    /// <summary>
    /// This is meant to contain a perfetto.protos.TraceMetrics. We're using
    /// bytes instead of the actual type because we do not want to generate
    /// protozero code for the metrics protos. We always encode/decode metrics
    /// using a reflection based mechanism that does not require the compiled C++
    /// code. This allows us to read in new protos at runtime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Metrics {
      get { return HasMetrics ? (pb::ByteString) result_ : pb::ByteString.Empty; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resultCase_ = ResultOneofCase.Metrics;
      }
    }
    /// <summary>Gets whether the "metrics" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMetrics {
      get { return resultCase_ == ResultOneofCase.Metrics; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "metrics" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMetrics() {
      if (HasMetrics) {
        ClearResult();
      }
    }

    /// <summary>Field number for the "metrics_as_prototext" field.</summary>
    public const int MetricsAsPrototextFieldNumber = 3;
    /// <summary>
    /// A perfetto.protos.TraceMetrics formatted as prototext.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MetricsAsPrototext {
      get { return HasMetricsAsPrototext ? (string) result_ : ""; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resultCase_ = ResultOneofCase.MetricsAsPrototext;
      }
    }
    /// <summary>Gets whether the "metrics_as_prototext" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMetricsAsPrototext {
      get { return resultCase_ == ResultOneofCase.MetricsAsPrototext; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "metrics_as_prototext" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMetricsAsPrototext() {
      if (HasMetricsAsPrototext) {
        ClearResult();
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private readonly static string ErrorDefaultValue = "";

    private string error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_ ?? ErrorDefaultValue; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasError {
      get { return error_ != null; }
    }
    /// <summary>Clears the value of the "error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearError() {
      error_ = null;
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Metrics = 1,
      MetricsAsPrototext = 3,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeMetricResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeMetricResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Metrics != other.Metrics) return false;
      if (MetricsAsPrototext != other.MetricsAsPrototext) return false;
      if (Error != other.Error) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMetrics) hash ^= Metrics.GetHashCode();
      if (HasMetricsAsPrototext) hash ^= MetricsAsPrototext.GetHashCode();
      if (HasError) hash ^= Error.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMetrics) {
        output.WriteRawTag(10);
        output.WriteBytes(Metrics);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (HasMetricsAsPrototext) {
        output.WriteRawTag(26);
        output.WriteString(MetricsAsPrototext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMetrics) {
        output.WriteRawTag(10);
        output.WriteBytes(Metrics);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (HasMetricsAsPrototext) {
        output.WriteRawTag(26);
        output.WriteString(MetricsAsPrototext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMetrics) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metrics);
      }
      if (HasMetricsAsPrototext) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetricsAsPrototext);
      }
      if (HasError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeMetricResult other) {
      if (other == null) {
        return;
      }
      if (other.HasError) {
        Error = other.Error;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Metrics:
          Metrics = other.Metrics;
          break;
        case ResultOneofCase.MetricsAsPrototext:
          MetricsAsPrototext = other.MetricsAsPrototext;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Metrics = input.ReadBytes();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            MetricsAsPrototext = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Metrics = input.ReadBytes();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            MetricsAsPrototext = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Input for the /enable_metatrace endpoint.
  /// </summary>
  public sealed partial class EnableMetatraceArgs : pb::IMessage<EnableMetatraceArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnableMetatraceArgs> _parser = new pb::MessageParser<EnableMetatraceArgs>(() => new EnableMetatraceArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnableMetatraceArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableMetatraceArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableMetatraceArgs(EnableMetatraceArgs other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableMetatraceArgs Clone() {
      return new EnableMetatraceArgs(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnableMetatraceArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnableMetatraceArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnableMetatraceArgs other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Output for the /enable_metatrace endpoint.
  /// </summary>
  public sealed partial class EnableMetatraceResult : pb::IMessage<EnableMetatraceResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnableMetatraceResult> _parser = new pb::MessageParser<EnableMetatraceResult>(() => new EnableMetatraceResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnableMetatraceResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableMetatraceResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableMetatraceResult(EnableMetatraceResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnableMetatraceResult Clone() {
      return new EnableMetatraceResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnableMetatraceResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnableMetatraceResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnableMetatraceResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Input for the /disable_and_read_metatrace endpoint.
  /// </summary>
  public sealed partial class DisableAndReadMetatraceArgs : pb::IMessage<DisableAndReadMetatraceArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisableAndReadMetatraceArgs> _parser = new pb::MessageParser<DisableAndReadMetatraceArgs>(() => new DisableAndReadMetatraceArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisableAndReadMetatraceArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableAndReadMetatraceArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableAndReadMetatraceArgs(DisableAndReadMetatraceArgs other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableAndReadMetatraceArgs Clone() {
      return new DisableAndReadMetatraceArgs(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisableAndReadMetatraceArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisableAndReadMetatraceArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisableAndReadMetatraceArgs other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Output for the /disable_and_read_metatrace endpoint.
  /// </summary>
  public sealed partial class DisableAndReadMetatraceResult : pb::IMessage<DisableAndReadMetatraceResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisableAndReadMetatraceResult> _parser = new pb::MessageParser<DisableAndReadMetatraceResult>(() => new DisableAndReadMetatraceResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisableAndReadMetatraceResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableAndReadMetatraceResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableAndReadMetatraceResult(DisableAndReadMetatraceResult other) : this() {
      metatrace_ = other.metatrace_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisableAndReadMetatraceResult Clone() {
      return new DisableAndReadMetatraceResult(this);
    }

    /// <summary>Field number for the "metatrace" field.</summary>
    public const int MetatraceFieldNumber = 1;
    private readonly static pb::ByteString MetatraceDefaultValue = pb::ByteString.Empty;

    private pb::ByteString metatrace_;
    /// <summary>
    /// Bytes of perfetto.protos.Trace message. Stored as bytes
    /// to avoid adding a dependency on trace.proto.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Metatrace {
      get { return metatrace_ ?? MetatraceDefaultValue; }
      set {
        metatrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "metatrace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMetatrace {
      get { return metatrace_ != null; }
    }
    /// <summary>Clears the value of the "metatrace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMetatrace() {
      metatrace_ = null;
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private readonly static string ErrorDefaultValue = "";

    private string error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_ ?? ErrorDefaultValue; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "error" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasError {
      get { return error_ != null; }
    }
    /// <summary>Clears the value of the "error" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearError() {
      error_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisableAndReadMetatraceResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisableAndReadMetatraceResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Metatrace != other.Metatrace) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMetatrace) hash ^= Metatrace.GetHashCode();
      if (HasError) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMetatrace) {
        output.WriteRawTag(10);
        output.WriteBytes(Metatrace);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMetatrace) {
        output.WriteRawTag(10);
        output.WriteBytes(Metatrace);
      }
      if (HasError) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMetatrace) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Metatrace);
      }
      if (HasError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisableAndReadMetatraceResult other) {
      if (other == null) {
        return;
      }
      if (other.HasMetatrace) {
        Metatrace = other.Metatrace;
      }
      if (other.HasError) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Metatrace = input.ReadBytes();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Metatrace = input.ReadBytes();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Convenience wrapper for multiple descriptors, similar to FileDescriptorSet
  /// in descriptor.proto.
  /// </summary>
  public sealed partial class DescriptorSet : pb::IMessage<DescriptorSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescriptorSet> _parser = new pb::MessageParser<DescriptorSet>(() => new DescriptorSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescriptorSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Perfetto.Protos.TraceProcessorReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriptorSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriptorSet(DescriptorSet other) : this() {
      descriptors_ = other.descriptors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescriptorSet Clone() {
      return new DescriptorSet(this);
    }

    /// <summary>Field number for the "descriptors" field.</summary>
    public const int DescriptorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Perfetto.Protos.DescriptorProto> _repeated_descriptors_codec
        = pb::FieldCodec.ForMessage(10, global::Perfetto.Protos.DescriptorProto.Parser);
    private readonly pbc::RepeatedField<global::Perfetto.Protos.DescriptorProto> descriptors_ = new pbc::RepeatedField<global::Perfetto.Protos.DescriptorProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Perfetto.Protos.DescriptorProto> Descriptors {
      get { return descriptors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescriptorSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescriptorSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!descriptors_.Equals(other.descriptors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= descriptors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      descriptors_.WriteTo(output, _repeated_descriptors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      descriptors_.WriteTo(ref output, _repeated_descriptors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += descriptors_.CalculateSize(_repeated_descriptors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescriptorSet other) {
      if (other == null) {
        return;
      }
      descriptors_.Add(other.descriptors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            descriptors_.AddEntriesFrom(input, _repeated_descriptors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            descriptors_.AddEntriesFrom(ref input, _repeated_descriptors_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
